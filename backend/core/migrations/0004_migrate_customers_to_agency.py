# Generated by Django 5.1.3 on 2025-02-23 17:29

from django.db import migrations
from django.contrib.auth.models import User

def migrate_customers_to_agency(apps, schema_editor):
    # Get the historical models
    Customer = apps.get_model('core', 'Customer')
    Agency = apps.get_model('core', 'Agency')
    AgencyUser = apps.get_model('core', 'AgencyUser')
    User = apps.get_model('auth', 'User')

    # Create a default agency for the first superuser
    superuser = User.objects.filter(is_superuser=True).first()
    if not superuser:
        superuser = User.objects.create_superuser(
            username='admin',
            email='admin@example.com',
            password='admin'
        )

    default_agency = Agency.objects.create(
        name="Default Agency",
        email="admin@example.com",
        phone_number="+10000000000",
        is_active=True
    )

    AgencyUser.objects.create(
        user=superuser,
        agency=default_agency,
        role='owner',
        is_primary=True
    )

    # Update all customers to use the default agency
    Customer.objects.update(agency=default_agency, created_by=superuser)

def reverse_migrate_customers_to_agency(apps, schema_editor):
    pass  # We can't really reverse this migration meaningfully

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_remove_customer_core_custom_agency__65954b_idx_and_more'),
    ]

    operations = [
        migrations.RunPython(
            migrate_customers_to_agency,
            reverse_migrate_customers_to_agency
        ),
    ]
